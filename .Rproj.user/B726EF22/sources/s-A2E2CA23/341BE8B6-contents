w_fill <- function(data_mat, players) { #constructs w matrix
  no_players <- length(players)
  w <- matrix(0, no_players, no_players) #initialize
  for (i in 1:no_players) {
    player <- players[i] #choose our first player
    win_ind <- which(data_mat$winner_id==player) #find the indexes in which this player wins
    los_ids <- data_mat[win_ind,]$loser_id #find the ids of the players this player beat
    for (j in 1:length(los_ids)) { #for each loser
      los_ind <- which(players==los_ids[j]) #find their respective index in the matrix w
      w[i, los_ind] <- w[i, los_ind] + 1 #update the w matrix for our player
    }
  }
  return(w)
}


extract_score <- function(player,lambda_hat,players){
  if(player %in% players){
    lambda_hat[which(players==player)]}
  else {
    return(-1)
  }
}

predict_winner <- function(test_dat,lambda_hat,players){

  prob_of_win <- rep(0,length(test_dat[,1]))

  for(i in 1:length(test_dat[,1])){

    player1 <- test_dat$winner_id[i]
    player2 <- test_dat$loser_id[i]

    score1 <-  extract_score(player1,lambda_hat,players)

    score2 <-  extract_score(player2,lambda_hat,players)

    prob_of_win[i] <- score1/(score1+score2)

    if(score1 <0 || score2<0) prob_of_win[i] <- 0.5
  }
  return(prob_of_win)
}


